-- 1. DATABASE CREATION
-- Ensure your connection in connect.php points to 'libsys'
CREATE DATABASE IF NOT EXISTS `libsys`;
USE `libsys`;

-- 2. TABLE: roles (Defines user access levels: Admin, Librarian, Member)
-- This table is required for the 'role_id' foreign key in the 'users' table.
CREATE TABLE IF NOT EXISTS `roles` (
    `role_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `role_name` VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Insert initial roles
INSERT INTO `roles` (`role_id`, `role_name`) VALUES
(1, 'Admin'),     -- Full control over system settings and data
(2, 'Librarian'), -- Manage books, members, and loans (default for sign-up logic)
(3, 'Member');    -- Can only view status and request loans

-- 3. TABLE: users (Stores login credentials and personal info for all users)
-- This table is directly used by login.php and signUp.php.
CREATE TABLE IF NOT EXISTS `users` (
    `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `role_id` INT UNSIGNED NOT NULL,
    `username` VARCHAR(50) NOT NULL UNIQUE,
    `email` VARCHAR(100) NOT NULL UNIQUE,
    `password_hash` VARCHAR(255) NOT NULL, -- Stores the hashed password
    `first_name` VARCHAR(50),
    `last_name` VARCHAR(50),
    `phone` VARCHAR(20),
    `address` VARCHAR(255),
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Foreign Key Constraint
    CONSTRAINT `fk_user_role` FOREIGN KEY (`role_id`) REFERENCES `roles` (`role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 4. TABLE: books (Stores general information about each book title)
CREATE TABLE IF NOT EXISTS `books` (
    `book_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `isbn` VARCHAR(20) UNIQUE,
    `title` VARCHAR(255) NOT NULL,
    `author` VARCHAR(255) NOT NULL,
    `publisher` VARCHAR(100),
    `publication_year` YEAR,
    `genre` VARCHAR(50),
    `total_copies` INT UNSIGNED NOT NULL DEFAULT 1,
    `available_copies` INT UNSIGNED NOT NULL DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 5. TABLE: loans (Tracks which member has borrowed which book and when it's due)
CREATE TABLE IF NOT EXISTS `loans` (
    `loan_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `book_id` INT UNSIGNED NOT NULL,
    `user_id` INT UNSIGNED NOT NULL,
    `loan_date` DATE NOT NULL,
    `due_date` DATE NOT NULL,
    `return_date` DATE NULL, -- NULL if not yet returned
    
    -- Foreign Key Constraints
    CONSTRAINT `fk_loan_book` FOREIGN KEY (`book_id`) REFERENCES `books` (`book_id`),
    CONSTRAINT `fk_loan_user` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- 6. EXAMPLE DATA (Optional: Creates an initial Admin account)
-- IMPORTANT: Replace 'secure_password' with a hashed password generated using PHP's password_hash()
-- For testing purposes, you can generate a hash for 'testpass' and insert it manually.
-- Example of generating a hash in PHP: echo password_hash('testpass', PASSWORD_DEFAULT);
-- Assuming 'testpass' hashes to '$2y$10$iI0T7Wl0XpGzXzS6U0v4d.eP9h7t8d9Q2L3M4N5O6P7R8S9T0U1V2W3X4Y5Z6A7B8C' for this example:

INSERT INTO `users` (`role_id`, `username`, `email`, `password_hash`, `first_name`, `last_name`) VALUES
(1, 'admin', 'admin@libsys.com', '$2y$10$iI0T7Wl0XpGzXzS6U0v4d.eP9h7t8d9Q2L3M4N5O6P7R8S9T0U1V2W3X4Y5Z6A7B8C', 'System', 'Admin');
